<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wayn.common.core.mapper.system.DeptMapper">

	<resultMap type="com.wayn.common.core.entity.system.Dept" id="SysDeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="sort"       column="sort"        />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="deptStatus" column="dept_status" />
		<result property="delFlag"    column="del_flag"    />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
		<result property="remark"     column="remark"      />
	</resultMap>

	<sql id="selectDeptVo">
        select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.sort, d.leader, d.phone, d.email, d.dept_status, d.del_flag, d.create_by,
        d.create_time, d.remark
        from sys_dept d
    </sql>

	<select id="selectDeptList" parameterType="com.wayn.common.core.entity.system.Dept" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where d.del_flag = 0
        <if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="deptName != null and deptName != ''">
			AND dept_name like concat('%', #{deptName}, '%')
		</if>
		<if test="deptStatus != null">
			AND dept_status = #{deptStatus}
		</if>
		order by d.parent_id, d.sort
    </select>

    <select id="selectDeptListByRoleId" parameterType="Long" resultType="Integer">
		select d.dept_id, d.parent_id
		from sys_dept d
            left join sys_role_dept rd on d.dept_id = rd.dept_id
        where rd.role_id = #{roleId}
        	and d.dept_id not in (select d.parent_id from sys_dept d inner join sys_role_dept rd on d.dept_id = rd.dept_id and rd.role_id = #{roleId})
		order by d.parent_id, d.sort
	</select>
</mapper>
